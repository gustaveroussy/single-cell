BootStrap: docker
From: ubuntu:20.04

#build image
#sudo singularity build single_cell_ubuntu20_R4.simg single_cell_ubuntu20_R4.def
#using image
#sudo singularity shell -B local_folder:/WORKDIR/container_folder single_cell_ubuntu20_R4.simg
#sudo singularity shell single_cell_ubuntu20_R4.simg

%environment
    export PATH=/opt/tools/bin:$PATH
    export RETICULATE_MINICONDA_ENABLED=FALSE
    LANG=en_US.UTF-8
    LC_ALL=en_US.UTF-8
    LC_TIME=en_US.UTF-8
    LC_MONETARY=en_US.UTF-8
    LC_PAPER=en_US.UTF-8
    LC_MEASUREMENT=en_US.UTF-8

%post
    echo "Ubuntu version ######################"
    cat /etc/lsb-release
    apt-get -y update && apt-get -y upgrade
    apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev libgsl-dev libgit2-dev
    apt-get install -y dirmngr gnupg apt-transport-https ca-certificates software-properties-common
    apt-get -y update && apt-get -y upgrade
    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
    add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/'
    apt-get -y update && apt-get -y upgrade
    apt-get install -y r-base r-base-dev #apt-cache policy r-base r-base-dev pour conna√Ætre les versions
    apt-cache policy r-base r-base-dev
    echo "R version ######################"
    R --version

    echo "Install R packages ######################"

    # Global packages
    R -e 'install.packages("devtools")'
    R -e 'install.packages("BiocManager")'
    R -e 'install.packages("rsvd", dependencies = TRUE)' # for seurat
    R -e 'remove.packages(grep("spatstat", installed.packages(), value = T))' # for seurat
    R -e 'devtools::install_github("spatstat/spatstat@v1.64-2")' # for seurat
    R -e 'install.packages("Seurat", dependencies = TRUE)'
    R -e 'library(Seurat)'
    R -e 'devtools::install_github("thomasp85/patchwork")'
    R -e 'install.packages("optparse")'
    R -e 'install.packages("Matrix")'
    R -e 'install.packages("doParallel")'
    R -e 'BiocManager::install("BiocParallel")'
    R -e 'install.packages("dplyr")'
    R -e 'install.packages("ggplot2")'
    R -e 'install.packages("stringr")'
    R -e 'install.packages("future")'
    R -e 'install.packages("openxlsx")'
    R -e 'install.packages("utils")'
    R -e 'install.packages("readxl")'
    R -e 'install.packages("readr")'
    R -e 'install.packages("testthat", dependencies = TRUE)'

    # seurat object generation + QC droplet
    R -e 'devtools::install_github("BUStools/BUSpaRse")' #load
    R -e 'BiocManager::install("DropletUtils")' #load
    R -e 'BiocManager::install("DelayedArray")' #load
    R -e 'install.packages("rjson")' #load
    R -e 'BiocManager::install("scater")' #QC.metrics
    R -e 'BiocManager::install("scran")' #cycle cellulaire + doublets
    R -e 'BiocManager::install("scDblFinder")' #doublets
    R -e 'BiocManager::install("scds")' # doublets

    # Normalization + dimension reduction + correction of bias + evaluation of bias and clustering parameters
    R -e 'devtools::install_github("quon-titative-biology/scBFA")' # red dim + eval_red_dim
    R -e 'install.packages("matrixStats")' # red dim
    R -e 'install.packages("scales")' # eval.redim
    R -e 'install.packages("RColorBrewer")' # eval.redim ###################
    R -e 'install.packages("foreach")' # clustering.eval.mt
    R -e 'install.packages("clustree")' # clustering.eval.mt

    # Clustering + Annotations + Markers + Plots + Cerebro
    R -e 'install.packages("methods")' # annotation
    R -e 'BiocManager::install("celldex")' # annotation
    R -e 'BiocManager::install("scRNAseq")' # annotation
    R -e 'BiocManager::install("SingleR")' # annotation
    R -e 'devtools::install_github("rnabioco/clustifyr")' # annotation
    R -e 'devtools::install_github("rnabioco/clustifyrdata")' # annotation
    R -e 'install.packages("UpSetR")' # Markers
    R -e 'BiocManager::install("romanhaa/cerebroApp")' #Vizu/comm
    #R -e 'install.packages("shinyFiles", dependencies = TRUE)' # for cerebro v1.2
    #R -e 'install.packages("shinycssloaders", dependencies = TRUE)' # for cerebro v1.2
    #R -e 'devtools::install_github("romanhaa/cerebroApp@v1.2.2")'
    R -e 'library(cerebroApp)'
    R -e 'library(Seurat)'
%labels
    Author Marine AGLAVE
